name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Build Check
        run: | 
          cd src
          dotnet build .
      
      - name: Generate coverage report
        run:
          dotnet test --collect "Code Coverage" --filter TestCategory=Unit --logger "coverage" --verbosity normal --no-build
        g
      - name: Upload SonarQube analysis
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: sqa_b632c864822aeae6d1e1c5f000363596eeb65460
          SONAR_HOST_URL: http://54.161.116.110:9000 # Replace with your SonarQube server URL
          SONAR_PROJECT_KEY: gestao-pedidos-pedido # Replace with your project key
          SONAR_ORGANIZATION_KEY: fiap
          SONAR_QUALITY_PROFILE: 'default'
        with:
          args: >
            -Dsonar.projectKey=gestao-pedidos-pedido
            -Dsonar.cs.opencover.reportsPaths=src/GestaoPedidos.Test/TestResults
            -Dsonar.tests=src/GestaoPedidos.Test # Directory containing tests
        

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 547185396737.dkr.ecr.us-east-2.amazonaws.com

      - name: Create ECR Repository
        run: |
          aws ecr create-repository --repository-name gestao-pedidos

      - name: Build and push Docker image
        run: |
          docker build -t 547185396737.dkr.ecr.us-east-2.amazonaws.com/gestao-pedidos:latest .
          docker push 547185396737.dkr.ecr.us-east-2.amazonaws.com/gestao-pedidos:latest

      - name: Deploy to EKS
        run: |
          terraform init
          terraform apply -auto-approve